/*
–î–∞–Ω —Å–ø–∏—Å–æ–∫ –∏–∑ ùëÅ (ùëÅ‚â§2‚àó105) —ç–ª–µ–º–µ–Ω—Ç–æ–≤,–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ü–µ–ª—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ 100.
–û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω–µ—É–±—ã–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.
–†–µ—à–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–∏—Ç–µ –≤ –≤–∏–¥–µ —Ñ—É–Ω–∫—Ü–∏–∏ CountSort(A), –∫–æ—Ç–æ—Ä–∞—è –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –µ–π —Å–ø–∏—Å–æ–∫.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
–°–ª–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å O(n). 
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏(sort, sorted), –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø—É–∑—ã—Ä—ë–∫/quick sort/merge sort –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–ø—Ä–µ—â–µ–Ω–æ!
*/

#include <iostream>
#include <vector>
using namespace std;

void CountSort(vector<int> &A) {
    int n = A.size();

    vector<int> counter(101);
    for (int i = 0; i < n; i++) {
        counter[A[i]] += 1;
    }
    A.clear();
    int len = 0;
    for (int num = 0; num < 101; num++) {
        for (int i = 0; i < counter[num]; i++){
            A.push_back(num);
        }

    }

    for (int i = 0; i < n; i++) {
        cout << A[i] << " ";
    }


}

int main() {
    vector <int> A;
    int x;
    while (cin >> x){
        A.push_back(x);
    }


    CountSort(A);

    return 0;
}