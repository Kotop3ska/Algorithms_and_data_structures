/*
–ù–∞ –ø—Ä—è–º–æ–π —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Å—Ç–æ–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å—Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä–æ–≤ —Ç–∞–∫, 
—á—Ç–æ–±—ã –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Åc—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–æ—Ä–æ–≤–∞–º–∏ –±—ã–ª–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥—è—Ç—Å—è —á–∏—Å–ª–∞ ùëÅ (2<ùëÅ<10001) ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–π–ª –∏ ùêæ (1<ùêæ<ùëÅ) ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–≤. 
–í–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–¥–∞—é—Ç—Å—è ùëÅ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è ‚Äì –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å—Ç–æ–π–ª (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—Ç 10^9)

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äì –Ω–∞–∏–±–æ–ª—å—à–µ–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ.
*/

#include <iostream>
#include <vector>


using namespace std;

bool good(const vector<int>& boxes, int k, int r) 
{
    int cows_count = 1;
    int last_box = boxes[0];
    for (int i = 1; i < boxes.size(); ++i) {
        if (boxes[i] - last_box >= r) {
            cows_count++;
            last_box = boxes[i];
        }
    }
    return cows_count >= k;
}

int main() 
{
    int n, k;
    cin >> n >> k;
    
    vector<int> a(n);
    for (int i = 0; i < n; ++i) 
    {
        cin >> a[i];
    }

    int l = 0;
    int r = a[n - 1] - a[0] + 1;

    while (r - l > 1) {
        int m = (l + r) / 2;
        if (good(a, k, m)) 
            l = m;
        else 
            r = m;
    
    }

    cout << l << endl;

    return 0;
}